name:  Terraform Workflow   					#workflow
on: [push]  #event

permissions:
  id-token: write # required for requesting the JWT 
  pull-requests: read
  contents: read


jobs:
  test-iac:
    runs-on: ubuntu-latest		 #Runner
    outputs:
      all-changes: ${{ steps.changed-files.outputs.all_changed_files }}
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.9.7"
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}


    - name: Run changed-files with dir_names
      id: changed-files
      uses: tj-actions/changed-files@v45
      with:
        files: |
            **.tf
            environments/**.tf
        dir_names: true

    - name: List all changed folders
      env:
        ALL_CHANGED_FOLDERS: ${{ steps.changed-files.outputs.all_changed_files }}
      run: |
        for file in ${ALL_CHANGED_FOLDERS}; do
          echo "$file was changed"
        done


    - name: Run Terraform Plan
      env:
        ALL_CHANGED_FOLDERS: ${{ steps.changed-files.outputs.all_changed_files }}
      run: |
          #changed_dirs=$(git diff --name-only ${{ github.event.after }} ${{ github.event.before }} | grep '\.tf$' | grep 'environments/' | cut -d'/' -f1-3 | sort -u)
          echo "Changed directories: ${ALL_CHANGED_FOLDERS}"
          # Loop over each changed directory and run terraform plan
          for dir in ${ALL_CHANGED_FOLDERS}; do
            echo "Running terraform plan in $dir"
            cd $dir
            terraform init
            terraform validate
            terraform plan -detailed-exitcode -out=tfplan
            terraform apply --auto-approve -input=false "tfplan"
            cd - # Go back to the root directory after each plan
          done

    - name: uplaod tfplan files artifacts
      #env:
        #ALL_CHANGED_FOLDERS: ${{ steps.changed-files.outputs.all_changed_files }}
      uses: actions/upload-artifact@v4
      with:
        name: all-changed-folders
        include-hidden-files: true
        path: |
          environments/**/tfplan
          environments/**/.terraform
          environments/**/.terraform.lock.hcl
            


  deploy-iac:
    needs: [test-iac]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.9.7"
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}

    - uses: actions/download-artifact@v4
      with:
        path: environments/
        merge-multiple: true
      # with:
      #   name: all-changed-folders
      #   path: |
      #     environments/**/tfplan
      #     environments/**/.terraform
      #     environments/**/.terraform.lock.hcl

    - name: Display structure of downloaded files
      run: |
        ls *
        echo "Folder Structure--------------------------------------------------------------"
        ls -R
        echo "Folder Structure--------------------------------------------------------------"
        ls -LR

    - name: Run Terraform Apply
      env:
        ALL_CHANGED_FOLDERS: ${{ needs.test-iac.outputs.all-changes }}
      run: |
          echo "Changed directories: ${ALL_CHANGED_FOLDERS}"
          # Loop over each changed directory and run terraform plan
          for dir in ${ALL_CHANGED_FOLDERS}; do
            echo "Running terraform apply in $dir"
            cd $dir
            chmod -R +x .terraform/* 
            terraform apply --auto-approve -input=false tfplan
            cd - # Go back to the root directory after each plan
          done


name:  Terraform Workflow   					#workflow
on: [push]  #event

permissions:
  id-token: write # required for requesting the JWT 

jobs:
  deploy-iac:
    runs-on: ubuntu-latest		 #Runner
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Test AWS Connection
      run: |
        ls -a
        aws sts get-caller-identity

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Find Changed Directories
      id: find-changes
      run: |
          # Get the list of modified directories (filter by environment/*)
          changed_dirs=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep 'environment/' | cut -d'/' -f1-3 | sort -u)
          echo "Changed directories: $changed_dirs"

          # If no changed directories, exit the job
          if [ -z "$changed_dirs" ]; then
            echo "No relevant changes detected. Skipping Terraform plan."
            exit 0
          fi

          # Pass the list of changed directories to the next step
          echo "::set-output name=dirs::$changed_dirs"


    - name: Run Terraform Plan
      if: steps.find-changes.outputs.dirs != ''
      run: |
          # Loop over each changed directory and run terraform plan
          for dir in ${{ steps.find-changes.outputs.dirs }}; do
            echo "Running terraform plan in $dir"
            cd $dir
            terraform init
            terraform plan
            cd - # Go back to the root directory after each plan
          done

    #- name: Validate
      #id: validate
      #run: terraform validate -no-color


    #- name: Plan
      #id: plan
      #run: terraform plan -no-color
      #continue-on-error: true




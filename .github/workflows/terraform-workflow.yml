name:  Terraform Workflow   					#workflow
on: [push]  #event

permissions:
  id-token: write # required for requesting the JWT 
  pull-requests: read

env:
  CHANGED_FOLDERS: $(git diff --name-only ${{ github.event.after }} ${{ github.event.before }} | grep '\.tf$' | grep 'environments/' | cut -d'/' -f1-3 | sort -u)

jobs:
  deploy-iac:
    runs-on: ubuntu-latest		 #Runner
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}

    
    - name: Detect Changes
      uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          environments:
            - 'environments/**'


    - name: Run changed-files with dir_names
      id: changed-files
      uses: tj-actions/changed-files@v45
      with:
        dir_names: true

    - name: List all changed files
      env:
        ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
      run: |
        for file in ${ALL_CHANGED_FILES}; do
          echo "$file was changed"
        done


    - name: Find Changed Directories
      id: find-changes
      run: |
          # Find changed .tf files and extract the directories containing the changes
          #changed_dirs=$(git diff --name-only ${{ github.event.after }} ${{ github.event.before }} | grep '\.tf$' | grep 'environments/' | cut -d'/' -f1-3 | sort -u)
          #changed_dirs=$(git diff --name-only origin/main ${{ github.sha }} -- '*.tf' | grep 'environments/' | cut -d'/' -f1-3 | sort -u)

          #echo $changed_dirs
          echo "Changed directories: $CHANGED_FOLDERS"

          # If no changed directories, exit the job
          #if [ -z "$changed_dirs" ]; then
            #echo "No relevant changes detected. Skipping Terraform plan."
            #exit 0
          #fi

          # Pass the list of changed directories to the next step
          #echo "::set-output name=dirs::$changed_dirs"


    - name: Run Terraform Plan
      env:
        ALL_CHANGED_FOLDERS: ${{ steps.changed-files.outputs.all_changed_files }}
      run: |
          #changed_dirs=$(git diff --name-only ${{ github.event.after }} ${{ github.event.before }} | grep '\.tf$' | grep 'environments/' | cut -d'/' -f1-3 | sort -u)
          echo "Changed directories: $ALL_CHANGED_FOLDERS"
          # Loop over each changed directory and run terraform plan
          for dir in ${ALL_CHANGED_FOLDERS}; do
            echo "Running terraform plan in $dir"
            cd $dir
            terraform init
            terraform plan
            cd - # Go back to the root directory after each plan
          done




